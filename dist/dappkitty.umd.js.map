{"version":3,"file":"dappkitty.umd.js","sources":["../src/dappKitty.js"],"sourcesContent":["/**\n * DappKitty: Modular, testable dApp dev toolkit\n * Usage: import { DappKitty } from './src/DappKitty.js';\n */\n\n/**\n * Deep merge utility for config objects.\n */\nexport function deepMerge(target, source) {\n  for (const key in source) {\n    if (\n      source[key] &&\n      typeof source[key] === 'object' &&\n      !Array.isArray(source[key])\n    ) {\n      if (!target[key]) target[key] = {};\n      deepMerge(target[key], source[key]);\n    } else {\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\n\n/**\n * Get DappKitty environment from URL or injected location.\n */\nexport function getDappKittyEnv(location = window?.location) {\n  if (!location) return 'prod';\n  const urlParams = new URLSearchParams(location.search || '');\n  const envParam = urlParams.get('envkitty');\n  if (envParam === 'local') return 'local';\n  if (envParam === 'dev') return 'dev';\n  return 'prod';\n}\n\n/**\n * Main DappKitty class. Accepts config and dependencies for testability.\n */\nexport class DappKitty {\n  /**\n   * @param {Object} config - User config overrides\n   * @param {Window} win - window object (for testing/mocking)\n   * @param {Document} doc - document object (for testing/mocking)\n   */\n  constructor(config = {}, win = window, doc = document) {\n    this.window = win;\n    this.document = doc;\n    this.defaultConfig = {\n      dev: {\n        window: { API_URL: null },\n        theme: { color: 'puzzl-light' },\n        dapp: { logLevel: 'kitty' }\n      },\n      local: {\n        window: { API_URL: null },\n        theme: { color: 'puzzl-dark' },\n        dapp: { logLevel: 'debug' }\n      },\n      expandIcon: '&#9660;',\n      collapseIcon: '&#9650;',\n      productionUrl: '',\n      targets: {\n        window: win,\n        theme: win.DAPP_THEME ?? {},\n        dapp: win.DAPP_CONFIG ?? {}\n      }\n    };\n    this.env = getDappKittyEnv(win?.location);\n    this.config = this.resolveConfig(config);\n    this.logKitty = this.createLogKitty();\n  }\n\n  /**\n   * Merge user config with defaults for the current env.\n   */\n  resolveConfig(overrides = {}) {\n    const env = this.env;\n    const envOverrides = overrides[env] || overrides;\n    let merged = deepMerge(\n      structuredClone(this.defaultConfig[env] || {}),\n      envOverrides\n    );\n    merged.expandIcon = this.defaultConfig.expandIcon;\n    merged.collapseIcon = this.defaultConfig.collapseIcon;\n    merged.productionUrl = this.defaultConfig.productionUrl;\n    merged.targets = this.defaultConfig.targets;\n    merged.env = env;\n    merged.logLevel = merged.dapp.logLevel || 'debug';\n    return merged;\n  }\n\n  /**\n   * Should DappKitty activate in this environment?\n   */\n  shouldActivate() {\n    if (this.window.location.origin === this.config.productionUrl) return false;\n    return this.config.env === 'dev' || this.config.env === 'local';\n  }\n\n  /**\n   * Initialize LogKitty overlay and patch console/fetch if active.\n   */\n  start() {\n    if (!this.shouldActivate()) return;\n    this.injectLogKittyStyles();\n    this.injectLogKittyPanel();\n    this.applyOverrides();\n    this.patchConsole();\n    this.patchFetch();\n    this.listenForErrors();\n    this.logKittyIntro();\n  }\n\n  /**\n   * Apply config overrides to targets.\n   */\n  applyOverrides() {\n    const targets = this.config.targets || {};\n    for (const key in targets) {\n      if (this.config[key]) {\n        Object.assign(targets[key], this.config[key]);\n      }\n    }\n  }\n\n  /**\n   * Create a logKitty function for this instance.\n   */\n  createLogKitty() {\n    const self = this;\n    function logKitty(message, level = 'debug') {\n      const logLevel = self.config.logLevel;\n      if (logLevel === 'info' && level !== 'info') return;\n      if (logLevel === 'kitty' && !logKitty._directCall) return;\n      const logKittyEl = self.document.getElementById('logKitty');\n      const contentDiv = logKittyEl ? logKittyEl.querySelector('.logKitty-content') : null;\n      let prefix = '';\n      let cssClass = 'logKitty-line';\n      switch (level) {\n        case 'error': prefix = '[ERROR] '; cssClass += ' logKitty-error'; break;\n        case 'warn': prefix = '[WARN] '; cssClass += ' logKitty-warn'; break;\n        case 'debug': prefix = '[DEBUG] '; cssClass += ' logKitty-debug'; break;\n        default: prefix = '[INFO] '; cssClass += ' logKitty-info';\n      }\n      if (contentDiv) {\n        const line = self.document.createElement('div');\n        line.className = cssClass;\n        line.textContent = prefix + message;\n        contentDiv.appendChild(line);\n        contentDiv.scrollTop = contentDiv.scrollHeight;\n      }\n    }\n    // Direct call helpers\n    function directKitty(fn) {\n      return function (...args) {\n        logKitty._directCall = true;\n        fn.apply(null, args);\n        logKitty._directCall = false;\n      };\n    }\n    const wrapped = directKitty(logKitty);\n    wrapped.error = directKitty(msg => wrapped(msg, 'error'));\n    wrapped.warn = directKitty(msg => wrapped(msg, 'warn'));\n    wrapped.info = directKitty(msg => wrapped(msg, 'info'));\n    wrapped.debug = directKitty(msg => wrapped(msg, 'debug'));\n    return wrapped;\n  }\n\n  /**\n   * Inject LogKitty panel into the DOM.\n   */\n  injectLogKittyPanel() {\n    if (!this.document.getElementById('logKitty')) {\n      const logKittyEl = this.document.createElement('div');\n      logKittyEl.id = 'logKitty';\n      this.createLogKittyView(logKittyEl);\n      if (this.document.body.firstChild) {\n        this.document.body.insertBefore(logKittyEl, this.document.body.firstChild);\n      } else {\n        this.document.body.appendChild(logKittyEl);\n      }\n      logKittyEl.classList.add(this.config.theme.color);\n    }\n  }\n\n  /**\n   * Create LogKitty view structure.\n   */\n  createLogKittyView(logKittyEl) {\n    const expandIcon = this.config.expandIcon;\n    const collapseIcon = this.config.collapseIcon;\n    const contentDiv = this.document.createElement('div');\n    contentDiv.className = 'logKitty-content';\n    logKittyEl.appendChild(contentDiv);\n    const toggleBtn = this.document.createElement('button');\n    toggleBtn.id = 'logKitty-toggle';\n    toggleBtn.type = 'button';\n    toggleBtn.innerHTML = expandIcon;\n    toggleBtn.title = 'Expand/collapse log';\n    toggleBtn.onclick = function () {\n      logKittyEl.classList.toggle('collapsed');\n      toggleBtn.innerHTML = logKittyEl.classList.contains('collapsed') ? collapseIcon : expandIcon;\n    };\n    logKittyEl.appendChild(toggleBtn);\n  }\n\n  /**\n   * Inject default styles for LogKitty.\n   */\n  injectLogKittyStyles() {\n    if (!this.document.getElementById('logKitty-styles')) {\n      const style = this.document.createElement('style');\n      style.id = 'logKitty-styles';\n      style.textContent = this.getLogKittyStyles();\n      this.document.head.appendChild(style);\n    }\n  }\n\n  /**\n   * Patch console methods to also log to LogKitty.\n   */\n  patchConsole() {\n    const logKitty = this.logKitty;\n    ['log', 'error', 'warn', 'debug', 'info'].forEach(method => {\n      const original = this.window.console[method];\n      this.window.console[method] = function (...args) {\n        original.apply(this.window.console, args);\n        try {\n          const msg = args.map(a => (typeof a === 'object' ? JSON.stringify(a) : String(a))).join(' ');\n          logKitty._directCall = false;\n          if (typeof logKitty[method] === 'function') {\n            logKitty[method](msg);\n          } else {\n            logKitty(msg, method);\n          }\n        } catch (e) {\n          original.call(this.window.console, '[logKitty failed]', e);\n        }\n      };\n    });\n  }\n\n  /**\n   * Patch fetch to log API calls and errors to LogKitty.\n   */\n  patchFetch() {\n    if (!this.window.fetch || this.window.fetch.__kittyPatched) return;\n    const logKitty = this.logKitty;\n    const originalFetch = this.window.fetch;\n    this.window.fetch = function (...args) {\n      let method = 'GET';\n      let url = '';\n      if (typeof args[0] === 'string') {\n        url = args[0];\n        if (args[1] && args[1].method) method = args[1].method.toUpperCase();\n      } else if (args[0] && args[0].url) {\n        url = args[0].url;\n        if (args[0].method) method = args[0].method.toUpperCase();\n      }\n      let formattedUrl = url;\n      try {\n        const parsed = new URL(url, this.window.location.origin);\n        formattedUrl = `${parsed.origin}${parsed.pathname}`;\n      } catch (e) {}\n      logKitty.info(`[fetch] ${method} ${formattedUrl}`);\n      return originalFetch.apply(this, args)\n        .then(response => {\n          let resUrl = response.url;\n          try {\n            const parsed = new URL(resUrl, this.window.location.origin);\n            resUrl = `${parsed.origin}${parsed.pathname}`;\n          } catch (e) {}\n          logKitty.debug(`[fetch] Response: ${response.status} ${response.statusText} for ${resUrl}`);\n          return response;\n        })\n        .catch(error => {\n          logKitty.error(`[fetch] Error: ${error} for ${method} ${formattedUrl}`);\n          throw error;\n        });\n    };\n    this.window.fetch.__kittyPatched = true;\n  }\n\n  /**\n   * Listen for uncaught errors and unhandled promise rejections.\n   */\n  listenForErrors() {\n    const logKitty = this.logKitty;\n    this.window.addEventListener('error', function(event) {\n      logKitty.error(`[window.error] ${event.message} at ${event.filename}:${event.lineno}:${event.colno}`);\n    });\n    this.window.addEventListener('unhandledrejection', function(event) {\n      logKitty.error(`[unhandledrejection] ${event.reason}`);\n    });\n  }\n\n  /**\n   * Print an intro message and mascot to LogKitty.\n   */\n  logKittyIntro() {\n    const logKittyEl = this.document.getElementById('logKitty');\n    if (!logKittyEl) return;\n    const contentDiv = logKittyEl.querySelector('.logKitty-content');\n    if (!contentDiv) return;\n    const catWrapper = this.document.createElement('div');\n    catWrapper.id = 'dappkitty-cat';\n    catWrapper.innerHTML = `\n<pre>\nLog Kitty Started!\n\nEnvironment: ${this.config.env}\nLog Level: ${this.config.logLevel}\nTheme: ${this.config.theme.color}\n\n      /\\\\_/\\\\\n     ( o.o )\n      > ^ <\nThis cat's got your back.\n</pre>`;\n    contentDiv.appendChild(catWrapper);\n  }\n\n  /**\n   * Get LogKitty CSS styles.\n   */\n  getLogKittyStyles() {\n    return `/* --- LogKitty: Command Line Developer Log --- */\n#logKitty {\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  width: 100%;\n  bottom: 0;\n  right: 0;\n  min-height: 2.5em;\n  max-height: 40vh;\n  background: var(--logkitty-bg);\n  color: var(--logkitty-fg);\n  font-family: 'Fira Mono', 'Menlo', 'Consolas', 'Courier New', monospace;\n  font-size: 1.02em;\n  line-height: 1.6;\n  border-top: 2px solid var(--logkitty-border);\n  box-shadow: 0 -2px 12px var(--logkitty-shadow);\n  padding: 1em 1.2em 1em 1.2em;\n  margin: 0;\n  overflow-y: auto;\n  white-space: pre-wrap;\n  word-break: break-all;\n  z-index: 99999;\n  position: fixed;\n  letter-spacing: 0.03em;\n  transition: min-height 0.2s, max-height 0.2s, padding 0.2s, background 0.2s, color 0.2s;\n}\n.logKitty-content {\n  flex: 1 1 auto;\n  overflow-y: auto;\n  width: 100%;\n}\n#logKitty.collapsed {\n  min-height: 0;\n  max-height: 2.5em;\n  overflow-y: hidden;\n  padding-top: 0.2em;\n  padding-bottom: 0.2em;\n  padding-left: 1.2em;\n  padding-right: 1.2em;\n}\n#logKitty #logKitty-toggle {\n  position: absolute;\n  top: 0.5em;\n  right: 1.2em;\n  background: var(--logkitty-toggle-bg);\n  color: var(--logkitty-fg);\n  border: none;\n  border-radius: 3px;\n  font-size: 1.1em;\n  cursor: pointer;\n  z-index: 100000;\n  padding: 0.1em 0.5em;\n  transition: background 0.2s;\n}\n#logKitty #logKitty-toggle:hover {\n  background: var(--logkitty-toggle-hover);\n}\n#logKitty .logKitty-line {\n  display: block;\n  padding: 0.1em 0;\n  border-left: 3px solid #20c964;\n  margin-left: 0.2em;\n  margin-bottom: 0.1em;\n  padding-left: 0.7em;\n  font-size: 1em;\n  background: transparent;\n}\n#logKitty .logKitty-error {\n  color: var(--logkitty-error);\n  background: var(--logkitty-error-bg);\n  border-left: 3px solid var(--logkitty-error);\n}\n#logKitty .logKitty-info {\n  color: var(--logkitty-info);\n  border-left: 3px solid var(--logkitty-info);\n}\n#logKitty .logKitty-warn {\n  color: var(--logkitty-warn);\n  background: var(--logkitty-warn-bg);\n  border-left: 3px solid var(--logkitty-warn);\n}\n#logKitty .logKitty-debug {\n  color: var(--logkitty-debug);\n  opacity: 0.7;\n  border-left: 3px solid var(--logkitty-debug);\n}\n#logKitty .logKitty-timestamp {\n  color: var(--logkitty-timestamp);\n  font-size: 0.92em;\n  margin-right: 0.7em;\n  opacity: 0.7;\n}\n\n/* Puzzl Brand Theme (c) 2025 */\n\n/* Light mode */\n#logKitty.puzzl-light {\n  --logkitty-bg: #fdfdfd;\n  --logkitty-fg: #0b1622;\n  --logkitty-border: #20C9D2;\n  --logkitty-shadow: #0001;\n  --logkitty-error: #F26430; /* Puzzl orange */\n  --logkitty-error-bg: #fff0ea;\n  --logkitty-info: #20C9D2; /* Puzzl teal */\n  --logkitty-info-bg: #e5fafd;\n  --logkitty-warn: #FFD464; /* Puzzl yellow */\n  --logkitty-warn-bg: #fffbe6;\n  --logkitty-debug: #445f63;\n  --logkitty-debug-bg: #eef6f7;\n  --logkitty-timestamp: #4caab7;\n  --logkitty-toggle-bg: #e0e0e0;\n  --logkitty-toggle-hover: #d0d0d0;\n}\n/* Dark mode */\n#logKitty.puzzl-dark {\n  --logkitty-bg: #0b1622;\n  --logkitty-fg: #e6f7ff;\n  --logkitty-border: #20C9D2;\n  --logkitty-shadow: #0008;\n  --logkitty-error: #F26430; /* Puzzl orange */\n  --logkitty-error-bg: #3b1d14;\n  --logkitty-info: #20C9D2; /* Puzzl teal */\n  --logkitty-info-bg: #102f32;\n  --logkitty-warn: #FFD464; /* Puzzl yellow */\n  --logkitty-warn-bg: #3b340e;\n  --logkitty-debug: #a6c5cb;\n  --logkitty-debug-bg: #1b2b2c;\n  --logkitty-timestamp: #88c2cc;\n  --logkitty-toggle-bg: #1a1f1f;\n  --logkitty-toggle-hover: #2a2f2f;\n}\n\n@media (max-width: 700px) {\n  #logKitty {\n    font-size: 0.93em;\n    padding: 0.7em 0.3em 0.7em 0.6em;\n    max-height: 40vh;\n  }\n}\n`;\n  }\n}"],"names":["deepMerge","target","source","key","Array","isArray","getDappKittyEnv","location","window","envParam","URLSearchParams","search","get","constructor","config","win","doc","document","this","defaultConfig","dev","API_URL","theme","color","dapp","logLevel","local","expandIcon","collapseIcon","productionUrl","targets","DAPP_THEME","DAPP_CONFIG","env","resolveConfig","logKitty","createLogKitty","overrides","envOverrides","merged","structuredClone","shouldActivate","origin","start","injectLogKittyStyles","injectLogKittyPanel","applyOverrides","patchConsole","patchFetch","listenForErrors","logKittyIntro","Object","assign","self","message","level","_directCall","logKittyEl","getElementById","contentDiv","querySelector","prefix","cssClass","line","createElement","className","textContent","appendChild","scrollTop","scrollHeight","directKitty","fn","args","apply","wrapped","error","msg","warn","info","debug","id","createLogKittyView","body","firstChild","insertBefore","classList","add","toggleBtn","type","innerHTML","title","onclick","toggle","contains","style","getLogKittyStyles","head","forEach","method","original","console","map","a","JSON","stringify","String","join","e","call","fetch","__kittyPatched","originalFetch","url","toUpperCase","formattedUrl","parsed","URL","pathname","then","response","resUrl","status","statusText","catch","addEventListener","event","filename","lineno","colno","reason","catWrapper"],"mappings":"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"}